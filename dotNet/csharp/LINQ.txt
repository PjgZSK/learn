Language Integrated Query (LINQ)

Filter data using where keyword;
Order data using orderby and optionally descending keyword;
Group data using group and optionally into keyword;
Join data using join keyword;
Project data using select keyword;

basic keywords
    from ... in ...
    where ...
    select ...

    Example:
            int[] scores = {1, 3, 4, 11, 33};
            IEnumerable<int> scoreQuery = 
                from score in scores
                where score > 4
                select score;
            foreach (var v in scoreQuery) Log(v + " ");

    Output: 
            11 33


group/order keywords
    group ... by ... into ...
    orderby ...

    Example:
            string sentence = "the quick brown fox jumps over the lazy dog";        
            string[] words = sentence.Split(' ');

            var query = from word in words
                        group word.ToUpper() by word.Length into gr
                        orderby gr.Key
                        select new { Length = gr.Key, Words = gr };

            foreach ( var obj in query )
            {
                Console.WriteLine($"Words of length {obj.Length}");
                foreach ( var word in obj.Words ) Console.WriteLine( word );
            } 
    
    Output:
            Words of length 3:
            THE
            FOX
            THE
            DOG
            Words of length 4:
            OVER
            LAZY
            Words of length 5:
            QUICK
            BROWN
            JUMPS

join keyword
    join
        join ... in ... on ... equals ...
    groupJoin
        join ... in ... on ... equals ... into ...
    
    left outer join
        form a in a
        join b in B on b.id equals a.id into gj
        from subgroup in gj.DefaultIfEmpty()
        select new { AID = a.id, BID = b.id = subgroup?.id ?? string.Empty };
